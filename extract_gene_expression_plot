#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long 'HelpMessage';
use List::MoreUtils qw(firstidx);

my $usage=<<_EOH_;;
------------------------------------------------------------------------------------------
This script is used to print the data for expression pattern plot

Usage: 
extract_gene_expression_plot --matrix all_species_raw_nb_rename_ordered.matrix.xls \
--sample coldata_rename_trait.txt \
--gene gene.txt \
--col1 Species --col2 Site_1 \
--order1 Common Yaldwyn Blue_eyed Blenny \
--order2 Cs Cn Vs Vn

Input files:

1. --matrix all_species_raw_nb_rename_ordered.matrix.xls

	B61	B62	B63	B64	B65	B66	B67	B68	B69	B71	B72	B73	B74	B75	B76	B77	B78	B79
OG0038649	430	218	222	486	402	612	266	159	278	334	365	190	614	464	346	543	477	490
OG0039547	0	1	0	0	0	0	0	0	0	0	0	3	0	0	0	0	0	0

2. --sample coldata_rename_trait.txt

	Site_1	Site_2	Species	Site_3	Date	pH_Meth	pH_Mett	Salinity	Sea_condition	Length	Gender
Blenny_Cn_1	Cn	Control	Blenny	Control	2019/1/15	NA	8.1	31.8	big_swell	6.2	Female
Blenny_Cn_2	Cn	Control	Blenny	Control	2019/1/15	NA	8.1	33.7	big_swell	4.8	Female
Blenny_Cs_1	Cs	Control	Blenny	Control	2019/1/15	NA	8.12	32.9	big_swell	4.2	NA

3. && 4. the column to be reordered in the samples file (coldata_rename_trait.txt)

5. Order in the first column

6. Order in the second column



													Kang 2021-09-02
------------------------------------------------------------------------------------------
_EOH_
;

GetOptions(
	'matrix:s', \my $matrix,	# the overall reads number matrix
	'samples:s', \ my $sample,	# the sample file information
	'gene:s', \my $gene,	# the file including genes: one gene per row
	'col1:s', \ my $col1, # the column of order1 in the sample file
	'col2:s', \ my $col2, # the column of order2 in the sample file
	'order1:s{1,}', \ my @order1,	# order in the highest level: 1-, 2-, ..., n-
	'order2:s{1,}', \my @order2,	# order in the second highest level: 1-1-, 1-2-, ..., 1-n-
	'help', \ my $help
	);

if ($help || (! $gene) || (! $matrix) && (! $sample) || (!@order1)) {
	die $usage; # all of these options are mandatory requirements
}

my $i;
my @header;
my %hash1;
open MATRIX, "$matrix" or die "can not open $matrix\n";
while (<MATRIX>) {
	chomp;
	s/\s+$//;
	$i++;
	my @a=split /\t/;
	foreach my $a (@a) {
		$a=~s/\s+//g;
	}
	if ($i==1) {
		@header=@a;
	} else {
		for (my $j = 1; $j < @a; $j++) {
			$hash1{$header[$j]}->{$a[0]}=$a[$j];
		}
	}
}

my ($k, $idx1, $idx2, $header1);
my (%hash2, %hash3);
open SAMPLE, "$sample" or die "can not open $sample\n";
while (<SAMPLE>) {
	chomp;
	s/\s+$//g;
	$k++;
	my @a=split /\t/;
	foreach my $a (@a) {
		$a=~s/\s+//g;
	}
	if ($k==1) {
			$idx1 = firstidx { $_ eq $col1 } @a;
			$idx2 = firstidx { $_ eq $col2 } @a if $col2;
			for (my $m = 1; $m < @a; $m++) {
				unless ($m==$idx1 || $m==$idx2 || ($a[$m]=~/\s+/)) {
					$header1.=$a[$m]."\t";
				}
			}
			$header1=~s/\s+$//;
		} else {
			my $info;
			push @{$hash2{$a[$idx1]}}, $a[0];
			if ($col2) {
				my $name=$a[$idx1]."-".$a[$idx2];
				push @{$hash2{$name}}, $a[0];
			}
			for (my $m = 1; $m < @a; $m++) {
				unless ($m==$idx1 || $m==$idx2 || ($a[$m]=~/\s+/)) {
					$info.=$a[$m]."\t";
				}
			}
			$info=~s/\s+$//;
			$hash3{$a[0]}=$info;
	}
}

my @genes;
open GENE, "$gene" or die "can not open $gene\n";
while (<GENE>) {
	chomp;
	s/\s+//g;
	push @genes, $_;
}

if ($col1 && ! $col2) {
	print "Gene\tInd_old\tInd_new\t$col1\tNb\t$header1\n";
	foreach my $gene (@genes) {
		my $i;
		foreach my $order1 (@order1) {
			$i++;
			foreach my $ind (@{$hash2{$order1}}) {
				my $name=$i."-".$ind;
				my $nb=$hash1{$ind}->{$gene};
				print "$gene\t$ind\t$name\t$order1\t$nb\t$hash3{$ind}\n";
			}
		}
	}
}

if ($col1 && $col2) {
	print "Gene\tInd_old\tInd_new\t$col1\t$col2\tNb\t$header1\n";
	foreach my $gene (@genes) {
		my $i;
		foreach my $order1 (@order1) {
			$i++;
			my $j;
			foreach my $order2 (@order2) {
				$j++;
				my $name=$order1."-".$order2;
				foreach my $ind (@{$hash2{$name}}) {
					my $new_name=$i."-".$j."-".$ind;
					my $nb=$hash1{$ind}->{$gene};
					print "$gene\t$ind\t$new_name\t$order1\t$order2\t$nb\t$hash3{$ind}\n";
				}
			}
		}
	}
}
