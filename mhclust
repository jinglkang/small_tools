#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long 'HelpMessage';
use List::MoreUtils qw(firstidx);

my $usage=<<_EOH_;;
------------------------------------------------------------------------------------------
This script is used to output the hclust plot from multiple reads number matrixs
print command to a Rscript and then run it to output the plot

Usage: 
mhclust --matrix Blenny_control_read_nb.xls Blue_eyed_control_read_nb.xls Common_control_read_nb.xls Yaldwyn_control_read_nb.xls \
--samples coldata_Blenny_control.txt coldata_Blue_eyed_control.txt coldata_Common_control.txt coldata_Yaldwyn_control.txt \
--column Site_2 Site_1 Site_1 Site_2 \
--title Blenny Blue_eyed Common Yaldwyn \
--prefix total


Example:
1. --matrix: Blenny_read_nb.xls

	B61	B62	B63	B64	B65	B66	B67	B68	B69	B71	B72	B73	B74	B75	B76	B77	B78	B79
OG0038649	430	218	222	486	402	612	266	159	278	334	365	190	614	464	346	543	477	490
OG0039547	0	1	0	0	0	0	0	0	0	0	0	3	0	0	0	0	0	0

2. --samples: coldata_Blenny.txt

	Site_1	Site_2	Species
B61	Vn	Vent	Blenny
B62	Vn	Vent	Blenny

																			Kang 2021-8-21
------------------------------------------------------------------------------------------
_EOH_
;


GetOptions(
	'matrix:s{1,}', \my @matrix,	# the overall reads number matrix
	'samples:s{1,}', \ my @sample_file,	# the sample information
	'column:s{1,}', \my @col, # the column selected from the sample information
	'title:s{1,}', \my @title, # the title of plot
	'prefix:s', \my $prefix, # the name of output pdf
	'help', \ my $help
	);

if ($help || (! @matrix) && (! @sample_file) || (!@col) || (!@title) || (!$prefix) ) {
	die $usage; # all of these options are mandatory requirements
}

main: {
	my $nb=@matrix;
	my $par;
	if ($nb==1) {
		$par="par(mfrow=c(1,1))";
	} elsif ($nb==2) {
		$par="par(mfrow=c(2,1))";
	} elsif ($nb==3 || $nb==4) {
		$par="par(mfrow=c(2,2))";
	}
	&creat_R_script_header($par);
	for (my $i = 0; $i < $nb; $i++) {
		my $matrix=$matrix[$i];
		my $sample_file=$sample_file[$i];
		my $title=$title[$i];
		my $col=$col[$i];
		&creat_R_script_common($matrix, $sample_file, $title, $col);
	}
	&creat_R_script_end();
	exit(0);
}

###################################################################################
sub creat_R_script_header {
	my ($par)=@_;
	my $output=$prefix.".pdf";
	open HCLUST, ">hclust.R" or die "can not creat hclust.R\n";
	print HCLUST "library(ape)\n";
	print HCLUST "library(dendextend)\n";
	print HCLUST "pdf(file = \"$output\", width = 11.69, height = 8.27)\n";
	print HCLUST "$par\n";
	close HCLUST;
}

sub creat_R_script_common {
	my ($matrix, $sample_file, $title, $col)=@_;
	open HCLUST, ">>hclust.R" or die "can not creat hclust.R\n";
	print HCLUST "data <- read.table(file=\"$matrix\",header=TRUE,row.names = 1)\n";
	print HCLUST "coldata <- read.table(file=\"$sample_file\")\n";
	print HCLUST "c <- cor(data, method=\"pearson\")\n";
	print HCLUST "d <- as.dist(1-c)\n";
	print HCLUST "d <- as.dist(1-c)\n";
	print HCLUST "hc <- hclust(d, method = \"complete\", members=NULL)\n";
	print HCLUST "dend <- as.dendrogram(hc)\n";
	my ($labels_colors, $total_branch_color, $legend, $fill, $total_ind)=&select_colour($sample_file, $title, $col);
	$title=~s/_/ /g;
#	print HCLUST "groupCodes <- c($total_ind)\n";
	print HCLUST "colorCodes <- c($labels_colors)\n";
	print HCLUST "labels_colors(dend) <- colorCodes[labels(dend)]\n";
#	print HCLUST "labels_colors(dend) <- colorCodes[groupCodes][order.dendrogram(dend)]\n";
#	print HCLUST "labels_colors(dend) <- c($labels_colors)\n";
	print HCLUST "dend \%\>\% ";
	print HCLUST "$total_branch_color\n";
	print HCLUST "legend(\"topright\", legend = c($legend), fill = c($fill))\n";
	close HCLUST;
}

sub creat_R_script_end {
	open HCLUST, ">>hclust.R" or die "can not creat hclust.R\n";
	print HCLUST "dev.off()";
	close HCLUST;
	`R --no-save --no-restore --no-site-file --no-init-file -q < hclust.R 1>&2`;
	`rm hclust.R`;
}

sub select_colour {
	my ($sample_file, $title, $col)=@_;
	$title=~s/_/ /g;
	my @colors=qw(DC0000FF F39B7F99 7E6148FF 00A087FF 4DBBD5FF 8491B4FF); # the maximum number of colour is 6
	open SAMP, "$sample_file" or die "can not open $sample_file\n";
	my $idx;
	my @level;
	my %hash;
	while (<SAMP>) {
		chomp;
		my @a=split;
		if (/^\s+/) {
			$idx = firstidx { $_ eq $col } @a;
		} else {
			$hash{$a[$idx+1]} .= $a[0]."_";
		}
	}
	my $level_nb=keys %hash;
	my $i=-1;
	my ($labels_colors, $total_branch_color, $legend, $fill, $total_ind);
	foreach my $level (sort keys %hash) {
		$i++;
		$legend.="\"$level\"".", ";
		my $branch_col;
		my $colour=$colors[$i];
		$fill.="\"#$colour\"".", ";
		my @ind=split /\_/, $hash{$level};
		my $ind_level;
		foreach my $ind (@ind) {
			$labels_colors.=$ind."="."\"#$colour\"".", ";
			$ind_level.="\"$ind\"".", ";
			$total_ind.="\"$ind\"".", ";
		}
		$ind_level=~s/\,\s+$//;
		$branch_col="set(\"by_labels_branches_col\", value = c($ind_level),TF_values = c(\"#$colour\",Inf))";
		$total_branch_color.=$branch_col." \%\>\%\n  ";
	}
	$labels_colors=~s/\,\s+$//;
	$fill=~s/\,\s+$//;
	$legend=~s/\,\s+$//;
	$total_ind=~s/\,\s+$//;
	$total_branch_color.="set(\"leaves_pch\", c(19)) \%\>\% set(\"leaves_cex\", c(2)) \%>\%\n  ";
	$total_branch_color.="set(\"leaves_col\", as.character(as.data.frame(labels_colors(dend))[,1])) \%\>\%\n  ";
	$total_branch_color.="plot(main = \"$title hclust\")";
	return($labels_colors, $total_branch_color, $legend, $fill, $total_ind);
}
